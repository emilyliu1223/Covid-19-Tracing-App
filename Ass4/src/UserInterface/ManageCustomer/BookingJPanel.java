/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageCustomer;

import Business.CustomerDirectory;
import Business.Flight;
import Business.FlightDirectory;
import Business.User.Customer;
import UserInterface.ManageFlight.ManageAirlinerFlightScheduleJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class BookingJPanel extends javax.swing.JPanel {
    private JPanel rightPanel;
    private FlightDirectory flightDir;
     private CustomerDirectory cusDir;
    //private List<String> listcus;
    private String cusId;
    private String choose;
    private int size;
    /**
     * Creates new form ViewBookingJPanel
     */
   public BookingJPanel(JPanel rightPanel, FlightDirectory flightDir, CustomerDirectory cusDir) {
      //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.rightPanel=rightPanel;
        this.flightDir=flightDir;
        this.cusDir=cusDir;
       // System.out.println(cusDir.getCustomerlist());
    }

   private void populate(List<String> listcus){
              DefaultTableModel dtm = (DefaultTableModel)tableCusflight.getModel();
        dtm.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy"); 
        //use all flightnumber to find all flight details
        for(int i=0; i<listcus.size();i++){
            for(Flight flightlist: flightDir.getFlightlist()){
                if(listcus.get(i).equals(flightlist.getFlightnumber())){
                    Object[] row = new Object[dtm.getColumnCount()];
            row[0]=flightlist.getAirliner();
            row[1]=flightlist.getFlightnumber();
            row[2]=flightlist.getFrom()+"-"+flightlist.getTo();
            row[3]=flightlist.getFromtime();
            String strfromDate = formatter.format(flightlist.getFromdate());
            row[4]=strfromDate;
            row[5]=flightlist.getTotime();
            String strtoDate = formatter.format(flightlist.getTodate());
            row[6]=strtoDate;
            row[7]=flightlist.getEstimation();
            dtm.addRow(row);
            continue;
                }
            }
        }
    }                                                

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        btnCustomerSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCusflight = new javax.swing.JTable();

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCustomerSearch.setText("Search Customer Flight");
        btnCustomerSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("ID number");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tableCusflight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Airliner", "Flight Number", "From", "FromTime", "FromDate", "ToTime", "ToDate", "Estimation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableCusflight);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 406, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(btnCustomerSearch)
                .addGap(214, 214, 214))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCustomerSearch)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 360, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnBack))
                .addGap(28, 28, 28))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(100, 100, 100)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(100, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout)rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCustomerSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerSearchActionPerformed
        // TODO add your handling code here:
        List <String>listcus1 = new ArrayList<String>();
        cusId=txtID.getText();
        System.out.println(cusId);
        if(cusId.equals("")){
            JOptionPane.showMessageDialog(null, "please enter customer ID");
            return;
        }else{
            //get all flightnumber from this customer
         for(Customer customer: cusDir.getCustomerlist()){
                if(customer.getID().equalsIgnoreCase(cusId)){
                    listcus1.add(customer.getFlightnumber());
                }
            }
         populate(listcus1);
        }
    }//GEN-LAST:event_btnCustomerSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        List<String> listcus2=new ArrayList<String>();
        
        int select = tableCusflight.getSelectedRow();
        if(select<0){
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }else{
            int d_btn = JOptionPane.YES_NO_OPTION;
            int d_dialog = JOptionPane.showConfirmDialog(null, "would you like to delete?","Warning",d_btn);
            if(d_dialog == JOptionPane.YES_OPTION){
                //get flight number
                choose = (String)tableCusflight.getValueAt(select, 1);
                 //remove flight from customer list
                for(Customer customer2:cusDir.getCustomerlist()){
                    System.out.println("break1 BEFORE:"+cusDir.getCustomerlist().size());
                    if(customer2.getID().equals(cusId)&&customer2.getFlightnumber().equals(choose)){
                        System.out.println("id:"+customer2.getID()+"flightnum:"+customer2.getFlightnumber());
                        cusDir.removeCustomer(customer2);
                        System.out.println("break1 AFTER:"+cusDir.getCustomerlist().size());
                        break;
                    }
                }
                //remove customer id from a flight list
                for(Flight flight2: flightDir.getFlightlist()){
                    if(flight2.getFlightnumber().equals(choose)){
                        size=flight2.getID().size();
                        System.out.println("index:"+size);
                        for(int i=0; i<size; i++){
                            System.out.println("index for:"+i);
                            System.out.println(flight2.getID());
                            if(flight2.getID().get(i).equals(cusId)){
                                System.out.println("delete flight"+flight2.getID().get(i));
                                flight2.getID().remove(i);
                                System.out.println("break2");
                                
                                break;
                            }
                        }
                }
            }
         //poopulate: get all flightnumber from this customerm
         System.out.println("test2");
         for(Customer customer3: cusDir.getCustomerlist()){
                if(customer3.getID().equalsIgnoreCase(cusId)){
                    listcus2.add(customer3.getFlightnumber());
                }
            }
            populate(listcus2);
        }
    }                           
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCustomerSearch;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableCusflight;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
