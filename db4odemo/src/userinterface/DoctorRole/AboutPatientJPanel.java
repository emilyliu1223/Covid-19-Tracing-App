/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.WorkQueue.WorkRequest_doctorQuarantine;
import Business.WorkQueue.WorkRequest_documentDoctor;
import People.Diagnosis;
import People.People;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author stacyhuang
 */
public class AboutPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DiagnosisJPanel
     */
    //private WorkRequest_documentDoctor thisrequest;
    private People thispeople;
    private JPanel jpanel;
    public AboutPatientJPanel(JPanel jpanel,People thispeople) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        //this.thisrequest=thisrequest;
        this.thispeople=thispeople;
        this.jpanel=jpanel;
        operationfield.setEditable(false);
        pastfield.setEditable(false);
        familyfield.setEditable(false);
        chronicfield.setEditable(false);
        allergyfield.setEditable(false);
        populatePatientMedicalRecord(this.thispeople);
    }

    private String convertArrayToString(ArrayList<String> arr){
        String toReturn="";
        if(arr.size()!=0){
            toReturn=arr.get(0);
            for(int i=1;i<arr.size(); i++){
                toReturn=toReturn+","+arr.get(i);
            }
        }else{
            toReturn="";
        }
        
        return toReturn;
    }
    public void popDiagonsisTable(ArrayList<Diagnosis> diagnosis){
        DefaultTableModel model = (DefaultTableModel) diagnosistable.getModel();
        model.setRowCount(0);
        for(Diagnosis dia:diagnosis){
            Object[] row = new Object[3];
            row[0]=dia;
            row[1]=dia.getDiagnosis();
            row[2]=dia.getMedicine();
            System.out.println("in table:"+row[0]+row[1]+row[2]);
            model.addRow(row);
        }
    }
    public void popTestTable(People p){
        DefaultTableModel model = (DefaultTableModel) testTable.getModel();
        model.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        for(WorkRequest_doctorQuarantine request:p.getQuarantineTesting().getWorkRequestList()){
            Object row[]=new Object[4];
            row[0]=request.getTestType();
            row[1]=formatter.format(request.getDate());
            row[2]=request.getResult();
            row[3]=request.getStatus();
            model.addRow(row);
        }
    }
    public void populatePatientMedicalRecord(People people){
        operationfield.setText(convertArrayToString(people.getMedicalRecord().getOperation_history()));
        pastfield.setText(convertArrayToString(people.getMedicalRecord().getPast_history()));
        familyfield.setText(convertArrayToString(people.getMedicalRecord().getFamily_history()));
        chronicfield.setText(convertArrayToString(people.getMedicalRecord().getChronicDisease()));
        allergyfield.setText(convertArrayToString(people.getMedicalRecord().getMedicineAllergy()));
        //notefield.setText(((LabTest_documentDoctor)request).getMessage());
        popDiagonsisTable(people.getMedicalRecord().getDoctorNote());
        popTestTable(people);
        //System.out.println(request.getPeople().getMedicalRecord().getDoctorNote());
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        operationfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pastfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        familyfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        chronicfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        allergyfield = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        diagnosistable = new javax.swing.JTable();
        detailbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        testTable = new javax.swing.JTable();

        jLabel1.setText("operation history");

        jLabel2.setText("past history");

        jLabel3.setText("family history");

        jLabel4.setText("chronic disease");

        jLabel5.setText("medicine allergy");

        diagnosistable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "date", "diagnosis", "medicine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(diagnosistable);
        if (diagnosistable.getColumnModel().getColumnCount() > 0) {
            diagnosistable.getColumnModel().getColumn(0).setResizable(false);
            diagnosistable.getColumnModel().getColumn(1).setResizable(false);
            diagnosistable.getColumnModel().getColumn(2).setResizable(false);
        }

        detailbtn.setText("detail");
        detailbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailbtnActionPerformed(evt);
            }
        });

        backbtn.setBackground(new java.awt.Color(255, 255, 255));
        backbtn.setText("back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        testTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "quarantine type", "date", "result", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(testTable);
        if (testTable.getColumnModel().getColumnCount() > 0) {
            testTable.getColumnModel().getColumn(0).setResizable(false);
            testTable.getColumnModel().getColumn(1).setResizable(false);
            testTable.getColumnModel().getColumn(2).setResizable(false);
            testTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detailbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel3)
                                .addGap(33, 33, 33)
                                .addComponent(familyfield, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(32, 32, 32)
                                        .addComponent(operationfield, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel2)
                                        .addGap(35, 35, 35)
                                        .addComponent(pastfield, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel4)
                                        .addGap(32, 32, 32)
                                        .addComponent(chronicfield, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(37, 37, 37)
                                        .addComponent(allergyfield, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backbtn)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1))
                            .addComponent(operationfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2))
                            .addComponent(pastfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addComponent(chronicfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(allergyfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addComponent(familyfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailbtn))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void detailbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailbtnActionPerformed
        // TODO add your handling code here:
        int select=diagnosistable.getSelectedRow();
        if(select<0){
            JOptionPane.showMessageDialog(null, "please select");
            return;
        }else{
            Diagnosis date=(Diagnosis)diagnosistable.getValueAt(select, 0);
//            String detail=(String)diagnosistable.getValueAt(select, 1);
//            String medicine=(String)diagnosistable.getValueAt(select, 2);
            System.out.println("to patient detail:"+date);
            CardLayout layout=(CardLayout)jpanel.getLayout();
            jpanel.add("patient detail",new PatientDetailJPanel(jpanel,date));
            layout.next(jpanel);
        }
    }//GEN-LAST:event_detailbtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        jpanel.remove(this);
        CardLayout layout = (CardLayout) jpanel.getLayout();
        layout.previous(jpanel);
    }//GEN-LAST:event_backbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField allergyfield;
    private javax.swing.JButton backbtn;
    private javax.swing.JTextField chronicfield;
    private javax.swing.JButton detailbtn;
    private javax.swing.JTable diagnosistable;
    private javax.swing.JTextField familyfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField operationfield;
    private javax.swing.JTextField pastfield;
    private javax.swing.JTable testTable;
    // End of variables declaration//GEN-END:variables
}
