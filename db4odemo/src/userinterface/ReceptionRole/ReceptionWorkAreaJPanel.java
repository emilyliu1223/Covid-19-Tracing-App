/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ReceptionRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.InvestigationOrganization;
import Business.Organization.Organization;
import Business.Organization.QuarantineOrganization;
import Business.Organization.ReceptionOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest_quarantineCDC;
import Business.WorkQueue.WorkRequest_receptionInvestigation;
import People.People;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author stacyhuang
 */
public class ReceptionWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReceptionWorkAreaJPanel
     */
    private JPanel jpanel;
    private ReceptionOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private People thispeople;
    private WorkRequest_quarantineCDC thisrequest;
    public ReceptionWorkAreaJPanel(JPanel jpanel, UserAccount userAccount, ReceptionOrganization organization, Enterprise enterprise, EcoSystem system) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.jpanel = jpanel;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system=system;
        popPatientTable();
        sendbtn.setEnabled(false);
        messagearea.setEditable(false);
        setFieldEdible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        symptonfield = new javax.swing.JTextArea();
        sendbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        phonefield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addressfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        statefield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        countyfield = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        birthfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        agefield = new javax.swing.JTextField();
        selectbtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messagearea = new javax.swing.JTextArea();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Case Number", "Diagnos Date", "Hospital", "Patient ID", "Name", "Gender", "processor", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setResizable(false);
            patientTable.getColumnModel().getColumn(1).setResizable(false);
            patientTable.getColumnModel().getColumn(2).setResizable(false);
            patientTable.getColumnModel().getColumn(3).setResizable(false);
            patientTable.getColumnModel().getColumn(4).setResizable(false);
            patientTable.getColumnModel().getColumn(5).setResizable(false);
            patientTable.getColumnModel().getColumn(6).setResizable(false);
            patientTable.getColumnModel().getColumn(7).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1070, 188));

        jLabel2.setText("Symptons");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 242, -1, -1));

        symptonfield.setColumns(20);
        symptonfield.setRows(5);
        jScrollPane3.setViewportView(symptonfield);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 264, 219, -1));

        sendbtn.setText("Send to Investigation");
        sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbtnActionPerformed(evt);
            }
        });
        add(sendbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, -1, -1));

        jLabel1.setText("phone");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 231, -1, -1));
        add(phonefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 253, 268, -1));

        jLabel3.setText("address");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 285, -1, -1));
        add(addressfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 307, 268, -1));

        jLabel4.setText("state");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 339, -1, -1));

        jLabel5.setText("state");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 339, -1, -1));
        add(statefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 355, 120, -1));

        jLabel6.setText("county");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 339, -1, -1));
        add(countyfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 355, 130, -1));

        jLabel7.setText("birthday");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 387, -1, -1));
        add(birthfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 409, 268, -1));

        jLabel8.setText("age");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 447, -1, -1));
        add(agefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 469, 268, -1));

        selectbtn.setText("select");
        selectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectbtnActionPerformed(evt);
            }
        });
        add(selectbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 230, -1, -1));

        jLabel9.setText("message from quarantine inspector");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        messagearea.setColumns(20);
        messagearea.setRows(5);
        jScrollPane2.setViewportView(messagearea);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 290, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void setFieldEdible(boolean boo){
        phonefield.setEditable(boo);
            addressfield.setEditable(boo);
            statefield.setEditable(boo);
            countyfield.setEditable(boo);
            birthfield.setEditable(boo);
            agefield.setEditable(boo);
            symptonfield.setEditable(boo);
    }
    private void setFieldText(String s){
        phonefield.setText(s);
            addressfield.setText(s);
            statefield.setText(s);
            countyfield.setText(s);
            birthfield.setText(s);
            agefield.setText(s);
            symptonfield.setText(s);
    }
    private void selectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectbtnActionPerformed
        // TODO add your handling code here:
        int select=patientTable.getSelectedRow();
        if(select<0){
            JOptionPane.showMessageDialog(null, "please select");
            return;
        }else{
            WorkRequest_quarantineCDC request=(WorkRequest_quarantineCDC) patientTable.getValueAt(select, 0);
            this.thispeople=request.getPatient();
            this.thisrequest=request;
            phonefield.setText(thispeople.getPhone());
            addressfield.setText(thispeople.getAddress());
            statefield.setText(thispeople.getState());
            countyfield.setText(thispeople.getCounty());
            birthfield.setText(thispeople.getBirthday());
            agefield.setText(String.valueOf(thispeople.getAge()));
            symptonfield.setText(request.getSymptons());
            messagearea.setText(request.getMessage());
            messagearea.setEditable(true);
            sendbtn.setEnabled(true);
        }
    }//GEN-LAST:event_selectbtnActionPerformed

    private void sendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbtnActionPerformed
        // TODO add your handling code here:
        if(thisrequest.getReceiver()!=null){
            JOptionPane.showMessageDialog(null, "already sent to investigation");
            return;
        }else{
            Date date =new Date();
            thisrequest.setReceiver(userAccount);
            WorkRequest_receptionInvestigation toInvestigation=new WorkRequest_receptionInvestigation();
            toInvestigation.setCaseNumber(thisrequest.getCaseNumber());
            toInvestigation.setHospital(thisrequest.getEnterprise());
            toInvestigation.setPatient(thisrequest.getPatient());
            toInvestigation.setSender(userAccount);
            toInvestigation.setSymptons(thisrequest.getSymptons());
            toInvestigation.setStatus("pending");
            toInvestigation.setDiagnosisDate(thisrequest.getDate());
            toInvestigation.setSentDate(date);
            toInvestigation.setMessage(messagearea.getText());
            thisrequest.setStatus("sent");
            InvestigationOrganization invesorg=null;
            for(Organization o:enterprise.getOrganizationDirectory().getOrganizationList()){
                if(o instanceof InvestigationOrganization){
                    invesorg=(InvestigationOrganization)o;
                    break;
                }
            }
            invesorg.getWorkQueue_receptionInvestigation().getWorkRequestList().add(toInvestigation);
            popPatientTable();
            setFieldText("");
            messagearea.setText("");
            JOptionPane.showMessageDialog(null, "request sent");
            
        }
    }//GEN-LAST:event_sendbtnActionPerformed

    private void popPatientTable(){
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
        model.setRowCount(0);
        for(WorkRequest_quarantineCDC request:organization.getWorkQueue_quarantineCDC().getWorkRequestList()){
            Object row[]=new Object[8];
            row[0]=request;
            row[1]=formatter.format(request.getDate());
            row[2]=request.getEnterprise().getName();
            row[3]=request.getPatient().getId();
            row[4]=request.getPatient().getName();
            row[5]=request.getPatient().getGender();
            row[6]=request.getReceiver()==null?"":request.getReceiver().getEmployee().getName();
            row[7]=request.getStatus().equals("sent to CDC")?"pending":"sent";
            model.addRow(row);
            
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressfield;
    private javax.swing.JTextField agefield;
    private javax.swing.JTextField birthfield;
    private javax.swing.JTextField countyfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea messagearea;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField phonefield;
    private javax.swing.JButton selectbtn;
    private javax.swing.JButton sendbtn;
    private javax.swing.JTextField statefield;
    private javax.swing.JTextArea symptonfield;
    // End of variables declaration//GEN-END:variables
}
